# Simple workflow for deploying static content to GitHub Pages
name: Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  schedule:
    # twice a day refetch stormglass data
    - cron: "23 7,19 * * *"
    # every hour refetch weather data
    - cron: "23 0-6,8-18,20-23 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      refetch-data:
        description: "Fetch updated data before build (true/false)"
        required: false
        default: "false"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event_name) }}
        run: |
          echo $EVENT_CONTEXT

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%dT%H:%M')" >> $GITHUB_OUTPUT

      - name: Cache API data
        uses: actions/cache@v4
        with:
          path: data/
          key: ${{ runner.os }}-api-data-${{ steps.date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-api-data-

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          TZ: "Europe/London"
          STORMGLASS_API_KEY: ${{ secrets.STORMGLASS_API_KEY }}
          REFETCH_STORMGLASS_DATA: ${{ github.event.schedule == '23 7,19 * * *' || github.event.inputs.refetch-data == 'true' }}
          REFETCH_OPENMETEO_DATA: "true"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "./build"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
